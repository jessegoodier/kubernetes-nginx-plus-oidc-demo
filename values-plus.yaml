controller:
  nginxplus: true
  image:
<<<<<<< HEAD
    repository: us-central1-docker.pkg.dev/f5-gcs-4299-sales-se-nginx/central1/nginx-plus-ingress
    tag: 2.0.0-ubi
  config:
    entries:
      resolver-addresses: kube-dns.kube-system.svc.cluster.local
      resolver-valid: 5s
      stream-snippets: |
        resolver kube-dns.kube-system.svc.cluster.local valid=5s;
        server {
            listen 12345;
            zone_sync;
            zone_sync_server nginx-ingress-headless.nginx-ingress.svc.cluster.local:12345 resolve;
        }
=======
    repository: gcr.io/f5-gcs-4299-sales-se-nginx/nginx-plus-ingress
    tag: "1.12.1-ubi"
>>>>>>> 6e9625c5287c8e212dda562d1e50ac5f93fbd047
  setAsDefaultIngress: true
  ingressClass: nginx
  enableCustomResources: true
  enablePreviewPolicies: true
  enableSnippets: true
  healthStatus: true
  latency-metrics: true
  # smarter LB method:
  lb-method: "least_time last_byte"
  # for debugging
  error-log-level: info
  # plus level logging:
  log-format:  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" rn="$resource_name" "$resource_type" "$resource_namespace" svc="$service" "$request_id" rt=“$request_time” ua=“$upstream_addr” uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time" uqt=“$upstream_queue_time“ cs=“$upstream_cache_status“'
  nginxStatus:
    ## Enable the NGINX stub_status, or the NGINX Plus API.
    enable: true
    port: 8080
    ## Add IPv4 IP/CIDR blocks to the allow list for the NGINX Plus API. Separate multiple IP/CIDR by commas.
    allowCidrs: "0.0.0.0/0"
  service:
    extraLabels:
      # needs to match ServiceMonitor matchLabels
      app: nginx-ingress-controller
    customPorts:
    - name: dashboard
      targetPort: 8080
      protocol: TCP
      port: 8080
    - name: prometheus
      targetPort: 9113
      protocol: TCP
      port: 9113
  config:
    entries:
      resolver-addresses: kube-dns.kube-system.svc.cluster.local
      resolver-valid: 5s
      # smarter LB method:
      lb-method: "least_time last_byte"
      # for debugging
      error-log-level: info
      # plus level logging:
      log-format:  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" rn="$resource_name" "$resource_type" "$resource_namespace" svc="$service" "$request_id" rt=“$request_time” ua=“$upstream_addr” uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time" uqt=“$upstream_queue_time“ cs=“$upstream_cache_status“'
prometheus:
  create: true
  scheme: http
  port: 9113
